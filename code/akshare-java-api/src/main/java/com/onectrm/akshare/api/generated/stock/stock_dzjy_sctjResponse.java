
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:02 CST 2022*/
package com.onectrm.akshare.api.generated.stock;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: stock
* 接口: stock_dzjy_sctj
* 目标地址: http://data.eastmoney.com/dzjy/dzjy_sctj.aspx
* 描述: 东方财富网-数据中心-大宗交易-市场统计
* 限量: 单次返回所有历史数据
*/
public class stock_dzjy_sctjResponse extends AkShareRequestAndResponse {
    public stock_dzjy_sctjResponse(){
        setInterfaceName("stock_dzjy_sctj");
    }

    public static stock_dzjy_sctjResponse of(


    LocalDate p_jiao1yi4ri4qi1,

    Double p_yi4jia4cheng2jiao1zong3e2,

    Integer p_xu4hao4,

    Double p_shang4zheng4zhi3shu4zhang3die1fu2,

    Double p_shang4zheng4zhi3shu4,

    Double p_da4zong1jiao1yi4cheng2jiao1zong3e2,

    Double p_yi4jia4cheng2jiao1zong3e2zhan4bi3,

    Double p_zhe2jia4cheng2jiao1zong3e2,

    Double p_zhe2jia4cheng2jiao1zong3e2zhan4bi3,


    Map.Entry<String, String>... others){
    stock_dzjy_sctjResponse t = new stock_dzjy_sctjResponse();


    t.p_jiao1yi4ri4qi1 = p_jiao1yi4ri4qi1;

    t.p_yi4jia4cheng2jiao1zong3e2 = p_yi4jia4cheng2jiao1zong3e2;

    t.p_xu4hao4 = p_xu4hao4;

    t.p_shang4zheng4zhi3shu4zhang3die1fu2 = p_shang4zheng4zhi3shu4zhang3die1fu2;

    t.p_shang4zheng4zhi3shu4 = p_shang4zheng4zhi3shu4;

    t.p_da4zong1jiao1yi4cheng2jiao1zong3e2 = p_da4zong1jiao1yi4cheng2jiao1zong3e2;

    t.p_yi4jia4cheng2jiao1zong3e2zhan4bi3 = p_yi4jia4cheng2jiao1zong3e2zhan4bi3;

    t.p_zhe2jia4cheng2jiao1zong3e2 = p_zhe2jia4cheng2jiao1zong3e2;

    t.p_zhe2jia4cheng2jiao1zong3e2zhan4bi3 = p_zhe2jia4cheng2jiao1zong3e2zhan4bi3;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: 交易日期
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("交易日期")
    @JsonDeserialize(using = JacksonDateDeserializer.class) 
    
    private LocalDate p_jiao1yi4ri4qi1;

    public LocalDate getP_jiao1yi4ri4qi1() { return this.p_jiao1yi4ri4qi1;}
    public void setP_jiao1yi4ri4qi1(LocalDate v) { this.p_jiao1yi4ri4qi1 = v;}

    /**
    * name: 溢价成交总额
    * type: float64
    * desc: 注意单位: 元
    * required: 
    */
    @JsonProperty("溢价成交总额")
    
    
    private Double p_yi4jia4cheng2jiao1zong3e2;

    public Double getP_yi4jia4cheng2jiao1zong3e2() { return this.p_yi4jia4cheng2jiao1zong3e2;}
    public void setP_yi4jia4cheng2jiao1zong3e2(Double v) { this.p_yi4jia4cheng2jiao1zong3e2 = v;}

    /**
    * name: 序号
    * type: int64
    * desc: 
    * required: 
    */
    @JsonProperty("序号")
    
    
    private Integer p_xu4hao4;

    public Integer getP_xu4hao4() { return this.p_xu4hao4;}
    public void setP_xu4hao4(Integer v) { this.p_xu4hao4 = v;}

    /**
    * name: 上证指数涨跌幅
    * type: float64
    * desc: 注意单位: %
    * required: 
    */
    @JsonProperty("上证指数涨跌幅")
    
    
    private Double p_shang4zheng4zhi3shu4zhang3die1fu2;

    public Double getP_shang4zheng4zhi3shu4zhang3die1fu2() { return this.p_shang4zheng4zhi3shu4zhang3die1fu2;}
    public void setP_shang4zheng4zhi3shu4zhang3die1fu2(Double v) { this.p_shang4zheng4zhi3shu4zhang3die1fu2 = v;}

    /**
    * name: 上证指数
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("上证指数")
    
    
    private Double p_shang4zheng4zhi3shu4;

    public Double getP_shang4zheng4zhi3shu4() { return this.p_shang4zheng4zhi3shu4;}
    public void setP_shang4zheng4zhi3shu4(Double v) { this.p_shang4zheng4zhi3shu4 = v;}

    /**
    * name: 大宗交易成交总额
    * type: float64
    * desc: 注意单位: 元
    * required: 
    */
    @JsonProperty("大宗交易成交总额")
    
    
    private Double p_da4zong1jiao1yi4cheng2jiao1zong3e2;

    public Double getP_da4zong1jiao1yi4cheng2jiao1zong3e2() { return this.p_da4zong1jiao1yi4cheng2jiao1zong3e2;}
    public void setP_da4zong1jiao1yi4cheng2jiao1zong3e2(Double v) { this.p_da4zong1jiao1yi4cheng2jiao1zong3e2 = v;}

    /**
    * name: 溢价成交总额占比
    * type: float64
    * desc: 注意单位: %
    * required: 
    */
    @JsonProperty("溢价成交总额占比")
    
    
    private Double p_yi4jia4cheng2jiao1zong3e2zhan4bi3;

    public Double getP_yi4jia4cheng2jiao1zong3e2zhan4bi3() { return this.p_yi4jia4cheng2jiao1zong3e2zhan4bi3;}
    public void setP_yi4jia4cheng2jiao1zong3e2zhan4bi3(Double v) { this.p_yi4jia4cheng2jiao1zong3e2zhan4bi3 = v;}

    /**
    * name: 折价成交总额
    * type: float64
    * desc: 注意单位: 元
    * required: 
    */
    @JsonProperty("折价成交总额")
    
    
    private Double p_zhe2jia4cheng2jiao1zong3e2;

    public Double getP_zhe2jia4cheng2jiao1zong3e2() { return this.p_zhe2jia4cheng2jiao1zong3e2;}
    public void setP_zhe2jia4cheng2jiao1zong3e2(Double v) { this.p_zhe2jia4cheng2jiao1zong3e2 = v;}

    /**
    * name: 折价成交总额占比
    * type: float64
    * desc: 注意单位: %
    * required: 
    */
    @JsonProperty("折价成交总额占比")
    
    
    private Double p_zhe2jia4cheng2jiao1zong3e2zhan4bi3;

    public Double getP_zhe2jia4cheng2jiao1zong3e2zhan4bi3() { return this.p_zhe2jia4cheng2jiao1zong3e2zhan4bi3;}
    public void setP_zhe2jia4cheng2jiao1zong3e2zhan4bi3(Double v) { this.p_zhe2jia4cheng2jiao1zong3e2zhan4bi3 = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
