
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:02 CST 2022*/
package com.onectrm.akshare.api.generated.others;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: others
* 接口: air_quality_watch_point
* 目标地址: https://www.zq12369.com/environment.php
* 描述: 获取每个城市的所有空气质量监测点的数据
* 限量: 单次返回指定城市指定日期区间的所有监测点的空气质量数据
*/
public class air_quality_watch_pointResponse extends AkShareRequestAndResponse {
    public air_quality_watch_pointResponse(){
        setInterfaceName("air_quality_watch_point");
    }

    public static air_quality_watch_pointResponse of(


    Double p_so2,

    Double p_pm25,

    Double p_pm10,

    Double p_no2,

    String p_pointname,

    Double p_o3,

    Double p_aqi,

    Double p_co,


    Map.Entry<String, String>... others){
    air_quality_watch_pointResponse t = new air_quality_watch_pointResponse();


    t.p_so2 = p_so2;

    t.p_pm25 = p_pm25;

    t.p_pm10 = p_pm10;

    t.p_no2 = p_no2;

    t.p_pointname = p_pointname;

    t.p_o3 = p_o3;

    t.p_aqi = p_aqi;

    t.p_co = p_co;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: so2
    * type: float
    * desc: SO2
    * required: Y
    */
    @JsonProperty("so2")
    
    
    private Double p_so2;

    public Double getP_so2() { return this.p_so2;}
    public void setP_so2(Double v) { this.p_so2 = v;}

    /**
    * name: pm2_5
    * type: float
    * desc: PM2.5
    * required: Y
    */
    @JsonProperty("pm2_5")
    
    
    private Double p_pm25;

    public Double getP_pm25() { return this.p_pm25;}
    public void setP_pm25(Double v) { this.p_pm25 = v;}

    /**
    * name: pm10
    * type: float
    * desc: PM10
    * required: Y
    */
    @JsonProperty("pm10")
    
    
    private Double p_pm10;

    public Double getP_pm10() { return this.p_pm10;}
    public void setP_pm10(Double v) { this.p_pm10 = v;}

    /**
    * name: no2
    * type: float
    * desc: NO2
    * required: Y
    */
    @JsonProperty("no2")
    
    
    private Double p_no2;

    public Double getP_no2() { return this.p_no2;}
    public void setP_no2(Double v) { this.p_no2 = v;}

    /**
    * name: pointname
    * type: str
    * desc: 监测点名称
    * required: Y
    */
    @JsonProperty("pointname")
    
    
    private String p_pointname;

    public String getP_pointname() { return this.p_pointname;}
    public void setP_pointname(String v) { this.p_pointname = v;}

    /**
    * name: o3
    * type: float
    * desc: O3
    * required: Y
    */
    @JsonProperty("o3")
    
    
    private Double p_o3;

    public Double getP_o3() { return this.p_o3;}
    public void setP_o3(Double v) { this.p_o3 = v;}

    /**
    * name: aqi
    * type: float
    * desc: AQI
    * required: Y
    */
    @JsonProperty("aqi")
    
    
    private Double p_aqi;

    public Double getP_aqi() { return this.p_aqi;}
    public void setP_aqi(Double v) { this.p_aqi = v;}

    /**
    * name: co
    * type: float
    * desc: CO
    * required: Y
    */
    @JsonProperty("co")
    
    
    private Double p_co;

    public Double getP_co() { return this.p_co;}
    public void setP_co(Double v) { this.p_co = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
