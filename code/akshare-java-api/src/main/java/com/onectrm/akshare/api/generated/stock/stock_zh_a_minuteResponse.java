
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:02 CST 2022*/
package com.onectrm.akshare.api.generated.stock;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: stock
* 接口: stock_zh_a_minute
* 目标地址: http://finance.sina.com.cn/realstock/company/sh600519/nc.shtml
* 描述: 新浪财经-沪深京 A 股股票或者指数的分时数据，目前可以获取 1, 5, 15, 30, 60 分钟的数据频率, 可以指定是否复权
* 限量: 单次返回指定股票或指数的指定频率的最近交易日的历史分时行情数据
*/
public class stock_zh_a_minuteResponse extends AkShareRequestAndResponse {
    public stock_zh_a_minuteResponse(){
        setInterfaceName("stock_zh_a_minute");
    }

    public static stock_zh_a_minuteResponse of(


    Double p_low,

    Double p_open,

    Double p_close,

    Double p_volume,

    String p_day,

    Double p_high,


    Map.Entry<String, String>... others){
    stock_zh_a_minuteResponse t = new stock_zh_a_minuteResponse();


    t.p_low = p_low;

    t.p_open = p_open;

    t.p_close = p_close;

    t.p_volume = p_volume;

    t.p_day = p_day;

    t.p_high = p_high;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: low
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("low")
    
    
    private Double p_low;

    public Double getP_low() { return this.p_low;}
    public void setP_low(Double v) { this.p_low = v;}

    /**
    * name: open
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("open")
    
    
    private Double p_open;

    public Double getP_open() { return this.p_open;}
    public void setP_open(Double v) { this.p_open = v;}

    /**
    * name: close
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("close")
    
    
    private Double p_close;

    public Double getP_close() { return this.p_close;}
    public void setP_close(Double v) { this.p_close = v;}

    /**
    * name: volume
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("volume")
    
    
    private Double p_volume;

    public Double getP_volume() { return this.p_volume;}
    public void setP_volume(Double v) { this.p_volume = v;}

    /**
    * name: day
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("day")
    
    
    private String p_day;

    public String getP_day() { return this.p_day;}
    public void setP_day(String v) { this.p_day = v;}

    /**
    * name: high
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("high")
    
    
    private Double p_high;

    public Double getP_high() { return this.p_high;}
    public void setP_high(Double v) { this.p_high = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
