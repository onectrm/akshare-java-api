
    /*generated by AKShare JAVA API Generator Mon Jun 13 13:48:51 CST 2022*/
    package com.onectrm.akshare.api.generated.stock;

    import com.onectrm.akshare.api.JacksonDateDeserializer;
    import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
    import com.onectrm.akshare.api.AkShareRequestAndResponse;
    import com.fasterxml.jackson.annotation.*;
    import com.fasterxml.jackson.databind.annotation.*;
    import java.time.LocalDate;
    import java.time.LocalDateTime;
    import java.util.*;

    /**
    * 分类: stock
    * 接口: stock_hold_control_cninfo
    * 目标地址: http://webapi.cninfo.com.cn/#/thematicStatistics
    * 描述: 巨潮资讯-数据中心-专题统计-股东股本-实际控制人持股变动
    * 限量: 单次指定 symbol 的实际控制人持股变动数据, 从 2010 开始
    */
    public class stock_hold_control_cninfoResponse extends AkShareRequestAndResponse {
    public stock_hold_control_cninfoResponse(){
    setInterfaceName("stock_hold_control_cninfo");
    }

    public static stock_hold_control_cninfoResponse of(


    String p_zheng4juan4dai4ma3,

    String p_zheng4quan4jian3cheng1,

    LocalDate p_bian4dong4ri4qi1,

    String p_shi2ji4kong4zhi4ren2ming2cheng1,

    Double p_kong4gu3shu4liang4,

    Double p_kong4gu3bi3li4,

    String p_zhi2jie1kong4zhi4ren2ming2cheng1,

    String p_kong4zhi4lei4xing2,


    Map.Entry
    <String
    , String>... others){
    stock_hold_control_cninfoResponse t = new stock_hold_control_cninfoResponse();


    t.p_zheng4juan4dai4ma3 = p_zheng4juan4dai4ma3;

    t.p_zheng4quan4jian3cheng1 = p_zheng4quan4jian3cheng1;

    t.p_bian4dong4ri4qi1 = p_bian4dong4ri4qi1;

    t.p_shi2ji4kong4zhi4ren2ming2cheng1 = p_shi2ji4kong4zhi4ren2ming2cheng1;

    t.p_kong4gu3shu4liang4 = p_kong4gu3shu4liang4;

    t.p_kong4gu3bi3li4 = p_kong4gu3bi3li4;

    t.p_zhi2jie1kong4zhi4ren2ming2cheng1 = p_zhi2jie1kong4zhi4ren2ming2cheng1;

    t.p_kong4zhi4lei4xing2 = p_kong4zhi4lei4xing2;


    for (Map.Entry
    <String
    , String> o : others) {
    t.other.put(o.getKey(), o.getValue());
    }

    return t;
    }



    /**
    * name: 证劵代码
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("证劵代码")
    
    
    private String p_zheng4juan4dai4ma3;

    public String getP_zheng4juan4dai4ma3() { return this.p_zheng4juan4dai4ma3;}
    public void setP_zheng4juan4dai4ma3(String v) { this.p_zheng4juan4dai4ma3 = v;}

    /**
    * name: 证券简称
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("证券简称")
    
    
    private String p_zheng4quan4jian3cheng1;

    public String getP_zheng4quan4jian3cheng1() { return this.p_zheng4quan4jian3cheng1;}
    public void setP_zheng4quan4jian3cheng1(String v) { this.p_zheng4quan4jian3cheng1 = v;}

    /**
    * name: 变动日期
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("变动日期")
    @JsonDeserialize(using =
        JacksonDateDeserializer.class)
    
    
    private LocalDate p_bian4dong4ri4qi1;

    public LocalDate getP_bian4dong4ri4qi1() { return this.p_bian4dong4ri4qi1;}
    public void setP_bian4dong4ri4qi1(LocalDate v) { this.p_bian4dong4ri4qi1 = v;}

    /**
    * name: 实际控制人名称
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("实际控制人名称")
    
    
    private String p_shi2ji4kong4zhi4ren2ming2cheng1;

    public String getP_shi2ji4kong4zhi4ren2ming2cheng1() { return this.p_shi2ji4kong4zhi4ren2ming2cheng1;}
    public void setP_shi2ji4kong4zhi4ren2ming2cheng1(String v) { this.p_shi2ji4kong4zhi4ren2ming2cheng1 = v;}

    /**
    * name: 控股数量
    * type: float64
    * desc: 注意单位: 万股
    * required: 
    */
    @JsonProperty("控股数量")
    
    
    private Double p_kong4gu3shu4liang4;

    public Double getP_kong4gu3shu4liang4() { return this.p_kong4gu3shu4liang4;}
    public void setP_kong4gu3shu4liang4(Double v) { this.p_kong4gu3shu4liang4 = v;}

    /**
    * name: 控股比例
    * type: float64
    * desc: 注意单位: %
    * required: 
    */
    @JsonProperty("控股比例")
    
    
    private Double p_kong4gu3bi3li4;

    public Double getP_kong4gu3bi3li4() { return this.p_kong4gu3bi3li4;}
    public void setP_kong4gu3bi3li4(Double v) { this.p_kong4gu3bi3li4 = v;}

    /**
    * name: 直接控制人名称
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("直接控制人名称")
    
    
    private String p_zhi2jie1kong4zhi4ren2ming2cheng1;

    public String getP_zhi2jie1kong4zhi4ren2ming2cheng1() { return this.p_zhi2jie1kong4zhi4ren2ming2cheng1;}
    public void setP_zhi2jie1kong4zhi4ren2ming2cheng1(String v) { this.p_zhi2jie1kong4zhi4ren2ming2cheng1 = v;}

    /**
    * name: 控制类型
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("控制类型")
    
    
    private String p_kong4zhi4lei4xing2;

    public String getP_kong4zhi4lei4xing2() { return this.p_kong4zhi4lei4xing2;}
    public void setP_kong4zhi4lei4xing2(String v) { this.p_kong4zhi4lei4xing2 = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map
    <String
    ,String> other = new HashMap();
    public Map
    <String
    ,String> getOther(){ return other; }
    }
