
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:02 CST 2022*/
package com.onectrm.akshare.api.generated.stock;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: stock
* 接口: news_trade_notify_suspend_baidu
* 目标地址: https://gushitong.baidu.com/calendar
* 描述: 百度股市通-交易提醒-停复牌
* 限量: 单次获取指定 date 的停复牌数据, 提供港股的停复牌数据
*/
public class news_trade_notify_suspend_baiduResponse extends AkShareRequestAndResponse {
    public news_trade_notify_suspend_baiduResponse(){
        setInterfaceName("news_trade_notify_suspend_baidu");
    }

    public static news_trade_notify_suspend_baiduResponse of(


    LocalDateTime p_fu4pai2shi2jian1,

    LocalDateTime p_ting2pai2shi2jian1,

    String p_gu3piao4jian3cheng1,

    String p_gu3piao4dai4ma3,

    String p_jiao1yi4suo3,

    String p_ting2pai2shi4xiang4shuo1ming2,


    Map.Entry<String, String>... others){
    news_trade_notify_suspend_baiduResponse t = new news_trade_notify_suspend_baiduResponse();


    t.p_fu4pai2shi2jian1 = p_fu4pai2shi2jian1;

    t.p_ting2pai2shi2jian1 = p_ting2pai2shi2jian1;

    t.p_gu3piao4jian3cheng1 = p_gu3piao4jian3cheng1;

    t.p_gu3piao4dai4ma3 = p_gu3piao4dai4ma3;

    t.p_jiao1yi4suo3 = p_jiao1yi4suo3;

    t.p_ting2pai2shi4xiang4shuo1ming2 = p_ting2pai2shi4xiang4shuo1ming2;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: 复牌时间
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("复牌时间")
    
    @JsonDeserialize(using = JacksonDateTimeDeserializer.class) 
    private LocalDateTime p_fu4pai2shi2jian1;

    public LocalDateTime getP_fu4pai2shi2jian1() { return this.p_fu4pai2shi2jian1;}
    public void setP_fu4pai2shi2jian1(LocalDateTime v) { this.p_fu4pai2shi2jian1 = v;}

    /**
    * name: 停牌时间
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("停牌时间")
    
    @JsonDeserialize(using = JacksonDateTimeDeserializer.class) 
    private LocalDateTime p_ting2pai2shi2jian1;

    public LocalDateTime getP_ting2pai2shi2jian1() { return this.p_ting2pai2shi2jian1;}
    public void setP_ting2pai2shi2jian1(LocalDateTime v) { this.p_ting2pai2shi2jian1 = v;}

    /**
    * name: 股票简称
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("股票简称")
    
    
    private String p_gu3piao4jian3cheng1;

    public String getP_gu3piao4jian3cheng1() { return this.p_gu3piao4jian3cheng1;}
    public void setP_gu3piao4jian3cheng1(String v) { this.p_gu3piao4jian3cheng1 = v;}

    /**
    * name: 股票代码
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("股票代码")
    
    
    private String p_gu3piao4dai4ma3;

    public String getP_gu3piao4dai4ma3() { return this.p_gu3piao4dai4ma3;}
    public void setP_gu3piao4dai4ma3(String v) { this.p_gu3piao4dai4ma3 = v;}

    /**
    * name: 交易所
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("交易所")
    
    
    private String p_jiao1yi4suo3;

    public String getP_jiao1yi4suo3() { return this.p_jiao1yi4suo3;}
    public void setP_jiao1yi4suo3(String v) { this.p_jiao1yi4suo3 = v;}

    /**
    * name: 停牌事项说明
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("停牌事项说明")
    
    
    private String p_ting2pai2shi4xiang4shuo1ming2;

    public String getP_ting2pai2shi4xiang4shuo1ming2() { return this.p_ting2pai2shi4xiang4shuo1ming2;}
    public void setP_ting2pai2shi4xiang4shuo1ming2(String v) { this.p_ting2pai2shi4xiang4shuo1ming2 = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
