
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:02 CST 2022*/
package com.onectrm.akshare.api.generated.stock;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: stock
* 接口: stock_hk_spot
* 目标地址: http://vip.stock.finance.sina.com.cn/mkt/#qbgg_hk
* 描述: 获取所有港股的实时行情数据 15 分钟延时
* 限量: 单次返回当前时间戳的所有港股的数据
*/
public class stock_hk_spotResponse extends AkShareRequestAndResponse {
    public stock_hk_spotResponse(){
        setInterfaceName("stock_hk_spot");
    }

    public static stock_hk_spotResponse of(


    Double p_buy,

    Double p_changepercent,

    Double p_lasttrade,

    String p_symbol,

    Double p_prevclose,

    Double p_amount,

    Double p_sell,

    String p_tradetype,

    Double p_low,

    String p_engname,

    Double p_open,

    String p_name,

    Double p_volume,

    Double p_high,

    LocalDateTime p_ticktime,

    Double p_pricechange,


    Map.Entry<String, String>... others){
    stock_hk_spotResponse t = new stock_hk_spotResponse();


    t.p_buy = p_buy;

    t.p_changepercent = p_changepercent;

    t.p_lasttrade = p_lasttrade;

    t.p_symbol = p_symbol;

    t.p_prevclose = p_prevclose;

    t.p_amount = p_amount;

    t.p_sell = p_sell;

    t.p_tradetype = p_tradetype;

    t.p_low = p_low;

    t.p_engname = p_engname;

    t.p_open = p_open;

    t.p_name = p_name;

    t.p_volume = p_volume;

    t.p_high = p_high;

    t.p_ticktime = p_ticktime;

    t.p_pricechange = p_pricechange;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: buy
    * type: float
    * desc: 买一
    * required: 
    */
    @JsonProperty("buy")
    
    
    private Double p_buy;

    public Double getP_buy() { return this.p_buy;}
    public void setP_buy(Double v) { this.p_buy = v;}

    /**
    * name: changepercent
    * type: float
    * desc: 涨跌幅
    * required: 
    */
    @JsonProperty("changepercent")
    
    
    private Double p_changepercent;

    public Double getP_changepercent() { return this.p_changepercent;}
    public void setP_changepercent(Double v) { this.p_changepercent = v;}

    /**
    * name: lasttrade
    * type: float
    * desc: 最新价
    * required: 
    */
    @JsonProperty("lasttrade")
    
    
    private Double p_lasttrade;

    public Double getP_lasttrade() { return this.p_lasttrade;}
    public void setP_lasttrade(Double v) { this.p_lasttrade = v;}

    /**
    * name: symbol
    * type: str
    * desc: 港股代码
    * required: 
    */
    @JsonProperty("symbol")
    
    
    private String p_symbol;

    public String getP_symbol() { return this.p_symbol;}
    public void setP_symbol(String v) { this.p_symbol = v;}

    /**
    * name: prevclose
    * type: float
    * desc: 前一个交易日收盘价
    * required: 
    */
    @JsonProperty("prevclose")
    
    
    private Double p_prevclose;

    public Double getP_prevclose() { return this.p_prevclose;}
    public void setP_prevclose(Double v) { this.p_prevclose = v;}

    /**
    * name: amount
    * type: float
    * desc: 成交额(万)
    * required: 
    */
    @JsonProperty("amount")
    
    
    private Double p_amount;

    public Double getP_amount() { return this.p_amount;}
    public void setP_amount(Double v) { this.p_amount = v;}

    /**
    * name: sell
    * type: float
    * desc: 卖一
    * required: 
    */
    @JsonProperty("sell")
    
    
    private Double p_sell;

    public Double getP_sell() { return this.p_sell;}
    public void setP_sell(Double v) { this.p_sell = v;}

    /**
    * name: tradetype
    * type: str
    * desc: 交易类型
    * required: 
    */
    @JsonProperty("tradetype")
    
    
    private String p_tradetype;

    public String getP_tradetype() { return this.p_tradetype;}
    public void setP_tradetype(String v) { this.p_tradetype = v;}

    /**
    * name: low
    * type: float
    * desc: 最低价
    * required: 
    */
    @JsonProperty("low")
    
    
    private Double p_low;

    public Double getP_low() { return this.p_low;}
    public void setP_low(Double v) { this.p_low = v;}

    /**
    * name: engname
    * type: str
    * desc: 英文名称
    * required: 
    */
    @JsonProperty("engname")
    
    
    private String p_engname;

    public String getP_engname() { return this.p_engname;}
    public void setP_engname(String v) { this.p_engname = v;}

    /**
    * name: open
    * type: float
    * desc: 开盘价
    * required: 
    */
    @JsonProperty("open")
    
    
    private Double p_open;

    public Double getP_open() { return this.p_open;}
    public void setP_open(Double v) { this.p_open = v;}

    /**
    * name: name
    * type: str
    * desc: 中文名称
    * required: 
    */
    @JsonProperty("name")
    
    
    private String p_name;

    public String getP_name() { return this.p_name;}
    public void setP_name(String v) { this.p_name = v;}

    /**
    * name: volume
    * type: float
    * desc: 成交量(万)
    * required: 
    */
    @JsonProperty("volume")
    
    
    private Double p_volume;

    public Double getP_volume() { return this.p_volume;}
    public void setP_volume(Double v) { this.p_volume = v;}

    /**
    * name: high
    * type: float
    * desc: 最高价
    * required: 
    */
    @JsonProperty("high")
    
    
    private Double p_high;

    public Double getP_high() { return this.p_high;}
    public void setP_high(Double v) { this.p_high = v;}

    /**
    * name: ticktime
    * type: datetime
    * desc: 当前数据时间戳
    * required: 
    */
    @JsonProperty("ticktime")
    
    @JsonDeserialize(using = JacksonDateTimeDeserializer.class) 
    private LocalDateTime p_ticktime;

    public LocalDateTime getP_ticktime() { return this.p_ticktime;}
    public void setP_ticktime(LocalDateTime v) { this.p_ticktime = v;}

    /**
    * name: pricechange
    * type: float
    * desc: 涨跌额
    * required: 
    */
    @JsonProperty("pricechange")
    
    
    private Double p_pricechange;

    public Double getP_pricechange() { return this.p_pricechange;}
    public void setP_pricechange(Double v) { this.p_pricechange = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
