
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:01 CST 2022*/
package com.onectrm.akshare.api.generated.futures;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: futures
* 接口: futures_zh_minute_sina
* 目标地址: http://vip.stock.finance.sina.com.cn/quotes_service/view/qihuohangqing.html#titlePos_3
* 描述: 新浪财经-期货-分时数据
* 限量: 单次返回指定 symbol 和 period 的分时数据
*/
public class futures_zh_minute_sinaRequest extends AkShareRequestAndResponse {
    public futures_zh_minute_sinaRequest(){
        setInterfaceName("futures_zh_minute_sina");
    }

    public static futures_zh_minute_sinaRequest of(


    String p_period,

    String p_symbol,


    Map.Entry<String, String>... others){
    futures_zh_minute_sinaRequest t = new futures_zh_minute_sinaRequest();


    t.p_period = p_period;

    t.p_symbol = p_symbol;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: period
    * type: str
    * desc: period=&quot;1&quot;; choice of {&quot;1&quot;: &quot;1分钟&quot;, &quot;5&quot;: &quot;5分钟&quot;, &quot;15&quot;: &quot;15分钟&quot;, &quot;30&quot;: &quot;30分钟&quot;, &quot;60&quot;: &quot;60分钟&quot;}
    * required: 
    */
    @JsonProperty("period")
    
    
    private String p_period;

    public String getP_period() { return this.p_period;}
    public void setP_period(String v) { this.p_period = v;}

    /**
    * name: symbol
    * type: str
    * desc: symbol=&quot;IF2008&quot;; 具体合约(期货品种符号需要大写), 可以通过调用 ak.match_main_contract(symbol=&quot;cffex&quot;) 接口获取, 或者访问网页获取
    * required: 
    */
    @JsonProperty("symbol")
    
    
    private String p_symbol;

    public String getP_symbol() { return this.p_symbol;}
    public void setP_symbol(String v) { this.p_symbol = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
