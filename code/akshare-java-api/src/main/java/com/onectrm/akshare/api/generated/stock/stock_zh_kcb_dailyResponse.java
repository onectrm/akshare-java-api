
    /*generated by AKShare JAVA API Generator Mon Jun 13 13:48:50 CST 2022*/
    package com.onectrm.akshare.api.generated.stock;

    import com.onectrm.akshare.api.JacksonDateDeserializer;
    import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
    import com.onectrm.akshare.api.AkShareRequestAndResponse;
    import com.fasterxml.jackson.annotation.*;
    import com.fasterxml.jackson.databind.annotation.*;
    import java.time.LocalDate;
    import java.time.LocalDateTime;
    import java.util.*;

    /**
    * 分类: stock
    * 接口: stock_zh_kcb_daily
    * 目标地址: https://finance.sina.com.cn/realstock/company/sh688001/nc.shtml(示例)
    * 描述: 新浪财经-科创板股票历史行情数据
    * 限量: 单次返回指定 symbol 和 adjust 的所有历史行情数据; 请控制采集的频率, 大量抓取容易封IP
    */
    public class stock_zh_kcb_dailyResponse extends AkShareRequestAndResponse {
    public stock_zh_kcb_dailyResponse(){
    setInterfaceName("stock_zh_kcb_daily");
    }

    public static stock_zh_kcb_dailyResponse of(


    LocalDate p_date,

    Double p_close,

    Double p_high,

    Double p_low,

    Double p_open,

    Double p_volume,

    Double p_aftervolume,

    Double p_afteramount,

    Double p_outstandingshare,

    Double p_turnover,


    Map.Entry
    <String
    , String>... others){
    stock_zh_kcb_dailyResponse t = new stock_zh_kcb_dailyResponse();


    t.p_date = p_date;

    t.p_close = p_close;

    t.p_high = p_high;

    t.p_low = p_low;

    t.p_open = p_open;

    t.p_volume = p_volume;

    t.p_aftervolume = p_aftervolume;

    t.p_afteramount = p_afteramount;

    t.p_outstandingshare = p_outstandingshare;

    t.p_turnover = p_turnover;


    for (Map.Entry
    <String
    , String> o : others) {
    t.other.put(o.getKey(), o.getValue());
    }

    return t;
    }



    /**
    * name: date
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("date")
    @JsonDeserialize(using =
        JacksonDateDeserializer.class)
    
    
    private LocalDate p_date;

    public LocalDate getP_date() { return this.p_date;}
    public void setP_date(LocalDate v) { this.p_date = v;}

    /**
    * name: close
    * type: float64
    * desc: 收盘价
    * required: 
    */
    @JsonProperty("close")
    
    
    private Double p_close;

    public Double getP_close() { return this.p_close;}
    public void setP_close(Double v) { this.p_close = v;}

    /**
    * name: high
    * type: float64
    * desc: 最高价
    * required: 
    */
    @JsonProperty("high")
    
    
    private Double p_high;

    public Double getP_high() { return this.p_high;}
    public void setP_high(Double v) { this.p_high = v;}

    /**
    * name: low
    * type: float64
    * desc: 最低价
    * required: 
    */
    @JsonProperty("low")
    
    
    private Double p_low;

    public Double getP_low() { return this.p_low;}
    public void setP_low(Double v) { this.p_low = v;}

    /**
    * name: open
    * type: float64
    * desc: 开盘价
    * required: 
    */
    @JsonProperty("open")
    
    
    private Double p_open;

    public Double getP_open() { return this.p_open;}
    public void setP_open(Double v) { this.p_open = v;}

    /**
    * name: volume
    * type: float64
    * desc: 成交量(股)
    * required: 
    */
    @JsonProperty("volume")
    
    
    private Double p_volume;

    public Double getP_volume() { return this.p_volume;}
    public void setP_volume(Double v) { this.p_volume = v;}

    /**
    * name: after_volume
    * type: float64
    * desc: 盘后量; 参见[科创板盘后固定价格交易](http://www.sse.com.cn/lawandrules/sserules/tib/trading/c/4729491.shtml)
    * required: 
    */
    @JsonProperty("after_volume")
    
    
    private Double p_aftervolume;

    public Double getP_aftervolume() { return this.p_aftervolume;}
    public void setP_aftervolume(Double v) { this.p_aftervolume = v;}

    /**
    * name: after_amount
    * type: float64
    * desc: 盘后额; 参见[科创板盘后固定价格交易](http://www.sse.com.cn/lawandrules/sserules/tib/trading/c/4729491.shtml)
    * required: 
    */
    @JsonProperty("after_amount")
    
    
    private Double p_afteramount;

    public Double getP_afteramount() { return this.p_afteramount;}
    public void setP_afteramount(Double v) { this.p_afteramount = v;}

    /**
    * name: outstanding_share
    * type: float64
    * desc: 流通股本(股)
    * required: 
    */
    @JsonProperty("outstanding_share")
    
    
    private Double p_outstandingshare;

    public Double getP_outstandingshare() { return this.p_outstandingshare;}
    public void setP_outstandingshare(Double v) { this.p_outstandingshare = v;}

    /**
    * name: turnover
    * type: float64
    * desc: 换手率=成交量(股)/流通股本(股)
    * required: 
    */
    @JsonProperty("turnover")
    
    
    private Double p_turnover;

    public Double getP_turnover() { return this.p_turnover;}
    public void setP_turnover(Double v) { this.p_turnover = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map
    <String
    ,String> other = new HashMap();
    public Map
    <String
    ,String> getOther(){ return other; }
    }
