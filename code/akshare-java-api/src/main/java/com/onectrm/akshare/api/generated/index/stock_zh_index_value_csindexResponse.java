
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:01 CST 2022*/
package com.onectrm.akshare.api.generated.index;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: index
* 接口: stock_zh_index_value_csindex
* 目标地址: https://www.csindex.com.cn/zh-CN/indices/index-detail/H30374#/indices/family/detail?indexCode=H30374
* 描述: 中证指数-指数估值数据
* 限量: 该接口返回指定的指数的估值数据, 该接口只能返回近期的数据
*/
public class stock_zh_index_value_csindexResponse extends AkShareRequestAndResponse {
    public stock_zh_index_value_csindexResponse(){
        setInterfaceName("stock_zh_index_value_csindex");
    }

    public static stock_zh_index_value_csindexResponse of(


    String p_zhi3shu4zhong1wen2jian3cheng1,

    String p_zhi3shu4zhong1wen2quan2cheng1,

    String p_zhi3shu4ying1wen2jian3cheng1,

    Double p_shi4ying2lu42,

    Double p_gu3xi1lu42,

    Double p_shi4ying2lu41,

    Double p_gu3xi1lu41,

    String p_zhi3shu4ying1wen2quan2cheng1,

    LocalDate p_ri4qi1,

    String p_zhi3shu4dai4ma3,


    Map.Entry<String, String>... others){
    stock_zh_index_value_csindexResponse t = new stock_zh_index_value_csindexResponse();


    t.p_zhi3shu4zhong1wen2jian3cheng1 = p_zhi3shu4zhong1wen2jian3cheng1;

    t.p_zhi3shu4zhong1wen2quan2cheng1 = p_zhi3shu4zhong1wen2quan2cheng1;

    t.p_zhi3shu4ying1wen2jian3cheng1 = p_zhi3shu4ying1wen2jian3cheng1;

    t.p_shi4ying2lu42 = p_shi4ying2lu42;

    t.p_gu3xi1lu42 = p_gu3xi1lu42;

    t.p_shi4ying2lu41 = p_shi4ying2lu41;

    t.p_gu3xi1lu41 = p_gu3xi1lu41;

    t.p_zhi3shu4ying1wen2quan2cheng1 = p_zhi3shu4ying1wen2quan2cheng1;

    t.p_ri4qi1 = p_ri4qi1;

    t.p_zhi3shu4dai4ma3 = p_zhi3shu4dai4ma3;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: 指数中文简称
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("指数中文简称")
    
    
    private String p_zhi3shu4zhong1wen2jian3cheng1;

    public String getP_zhi3shu4zhong1wen2jian3cheng1() { return this.p_zhi3shu4zhong1wen2jian3cheng1;}
    public void setP_zhi3shu4zhong1wen2jian3cheng1(String v) { this.p_zhi3shu4zhong1wen2jian3cheng1 = v;}

    /**
    * name: 指数中文全称
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("指数中文全称")
    
    
    private String p_zhi3shu4zhong1wen2quan2cheng1;

    public String getP_zhi3shu4zhong1wen2quan2cheng1() { return this.p_zhi3shu4zhong1wen2quan2cheng1;}
    public void setP_zhi3shu4zhong1wen2quan2cheng1(String v) { this.p_zhi3shu4zhong1wen2quan2cheng1 = v;}

    /**
    * name: 指数英文简称
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("指数英文简称")
    
    
    private String p_zhi3shu4ying1wen2jian3cheng1;

    public String getP_zhi3shu4ying1wen2jian3cheng1() { return this.p_zhi3shu4ying1wen2jian3cheng1;}
    public void setP_zhi3shu4ying1wen2jian3cheng1(String v) { this.p_zhi3shu4ying1wen2jian3cheng1 = v;}

    /**
    * name: 市盈率2
    * type: float64
    * desc: 注意: （计算用股本）P/E2
    * required: 
    */
    @JsonProperty("市盈率2")
    
    
    private Double p_shi4ying2lu42;

    public Double getP_shi4ying2lu42() { return this.p_shi4ying2lu42;}
    public void setP_shi4ying2lu42(Double v) { this.p_shi4ying2lu42 = v;}

    /**
    * name: 股息率2
    * type: float64
    * desc: 注意: （计算用股本）D/P2
    * required: 
    */
    @JsonProperty("股息率2")
    
    
    private Double p_gu3xi1lu42;

    public Double getP_gu3xi1lu42() { return this.p_gu3xi1lu42;}
    public void setP_gu3xi1lu42(Double v) { this.p_gu3xi1lu42 = v;}

    /**
    * name: 市盈率1
    * type: float64
    * desc: 注意: （总股本）P/E1
    * required: 
    */
    @JsonProperty("市盈率1")
    
    
    private Double p_shi4ying2lu41;

    public Double getP_shi4ying2lu41() { return this.p_shi4ying2lu41;}
    public void setP_shi4ying2lu41(Double v) { this.p_shi4ying2lu41 = v;}

    /**
    * name: 股息率1
    * type: float64
    * desc: 注意: （总股本）D/P1
    * required: 
    */
    @JsonProperty("股息率1")
    
    
    private Double p_gu3xi1lu41;

    public Double getP_gu3xi1lu41() { return this.p_gu3xi1lu41;}
    public void setP_gu3xi1lu41(Double v) { this.p_gu3xi1lu41 = v;}

    /**
    * name: 指数英文全称
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("指数英文全称")
    
    
    private String p_zhi3shu4ying1wen2quan2cheng1;

    public String getP_zhi3shu4ying1wen2quan2cheng1() { return this.p_zhi3shu4ying1wen2quan2cheng1;}
    public void setP_zhi3shu4ying1wen2quan2cheng1(String v) { this.p_zhi3shu4ying1wen2quan2cheng1 = v;}

    /**
    * name: 日期
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("日期")
    @JsonDeserialize(using = JacksonDateDeserializer.class) 
    
    private LocalDate p_ri4qi1;

    public LocalDate getP_ri4qi1() { return this.p_ri4qi1;}
    public void setP_ri4qi1(LocalDate v) { this.p_ri4qi1 = v;}

    /**
    * name: 指数代码
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("指数代码")
    
    
    private String p_zhi3shu4dai4ma3;

    public String getP_zhi3shu4dai4ma3() { return this.p_zhi3shu4dai4ma3;}
    public void setP_zhi3shu4dai4ma3(String v) { this.p_zhi3shu4dai4ma3 = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
