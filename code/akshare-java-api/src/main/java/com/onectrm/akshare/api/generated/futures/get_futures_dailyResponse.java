
    /*generated by AKShare JAVA API Generator Mon Jun 13 13:48:49 CST 2022*/
    package com.onectrm.akshare.api.generated.futures;

    import com.onectrm.akshare.api.JacksonDateDeserializer;
    import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
    import com.onectrm.akshare.api.AkShareRequestAndResponse;
    import com.fasterxml.jackson.annotation.*;
    import com.fasterxml.jackson.databind.annotation.*;
    import java.time.LocalDate;
    import java.time.LocalDateTime;
    import java.util.*;

    /**
    * 分类: futures
    * 接口: get_futures_daily
    * 目标地址: 各交易所网站
    * 描述: 提供各交易所各品种的网站的历史行情数据, 其中 20040625, 20070604, 20081226, 20090119 原网页数据缺失
    * 限量: 单次返回指定时间段指定交易所的所有期货品种历史数据
    */
    public class get_futures_dailyResponse extends AkShareRequestAndResponse {
    public get_futures_dailyResponse(){
    setInterfaceName("get_futures_daily");
    }

    public static get_futures_dailyResponse of(


    String p_symbol,

    LocalDate p_date,

    Double p_open,

    Double p_high,

    Double p_low,

    String p_close,

    String p_volume,

    String p_openinterest,

    Double p_turnover,

    Double p_settle,

    Double p_presettle,

    String p_variety,


    Map.Entry
    <String
    , String>... others){
    get_futures_dailyResponse t = new get_futures_dailyResponse();


    t.p_symbol = p_symbol;

    t.p_date = p_date;

    t.p_open = p_open;

    t.p_high = p_high;

    t.p_low = p_low;

    t.p_close = p_close;

    t.p_volume = p_volume;

    t.p_openinterest = p_openinterest;

    t.p_turnover = p_turnover;

    t.p_settle = p_settle;

    t.p_presettle = p_presettle;

    t.p_variety = p_variety;


    for (Map.Entry
    <String
    , String> o : others) {
    t.other.put(o.getKey(), o.getValue());
    }

    return t;
    }



    /**
    * name: symbol
    * type: str
    * desc: 合约
    * required: 
    */
    @JsonProperty("symbol")
    
    
    private String p_symbol;

    public String getP_symbol() { return this.p_symbol;}
    public void setP_symbol(String v) { this.p_symbol = v;}

    /**
    * name: date
    * type: str
    * desc: 交易日
    * required: 
    */
    @JsonProperty("date")
    @JsonDeserialize(using =
        JacksonDateDeserializer.class)
    
    
    private LocalDate p_date;

    public LocalDate getP_date() { return this.p_date;}
    public void setP_date(LocalDate v) { this.p_date = v;}

    /**
    * name: open
    * type: float
    * desc: 开盘价
    * required: 
    */
    @JsonProperty("open")
    
    
    private Double p_open;

    public Double getP_open() { return this.p_open;}
    public void setP_open(Double v) { this.p_open = v;}

    /**
    * name: high
    * type: float
    * desc: 最高价
    * required: 
    */
    @JsonProperty("high")
    
    
    private Double p_high;

    public Double getP_high() { return this.p_high;}
    public void setP_high(Double v) { this.p_high = v;}

    /**
    * name: low
    * type: float
    * desc: 最低价
    * required: 
    */
    @JsonProperty("low")
    
    
    private Double p_low;

    public Double getP_low() { return this.p_low;}
    public void setP_low(Double v) { this.p_low = v;}

    /**
    * name: close
    * type: str
    * desc: 收盘价
    * required: 
    */
    @JsonProperty("close")
    
    
    private String p_close;

    public String getP_close() { return this.p_close;}
    public void setP_close(String v) { this.p_close = v;}

    /**
    * name: volume
    * type: str
    * desc: 成交量
    * required: 
    */
    @JsonProperty("volume")
    
    
    private String p_volume;

    public String getP_volume() { return this.p_volume;}
    public void setP_volume(String v) { this.p_volume = v;}

    /**
    * name: open_interest
    * type: str
    * desc: 持仓量
    * required: 
    */
    @JsonProperty("open_interest")
    
    
    private String p_openinterest;

    public String getP_openinterest() { return this.p_openinterest;}
    public void setP_openinterest(String v) { this.p_openinterest = v;}

    /**
    * name: turnover
    * type: float
    * desc: 成交额
    * required: 
    */
    @JsonProperty("turnover")
    
    
    private Double p_turnover;

    public Double getP_turnover() { return this.p_turnover;}
    public void setP_turnover(Double v) { this.p_turnover = v;}

    /**
    * name: settle
    * type: float
    * desc: 结算价
    * required: 
    */
    @JsonProperty("settle")
    
    
    private Double p_settle;

    public Double getP_settle() { return this.p_settle;}
    public void setP_settle(Double v) { this.p_settle = v;}

    /**
    * name: pre_settle
    * type: float
    * desc: 前结算价
    * required: 
    */
    @JsonProperty("pre_settle")
    
    
    private Double p_presettle;

    public Double getP_presettle() { return this.p_presettle;}
    public void setP_presettle(Double v) { this.p_presettle = v;}

    /**
    * name: variety
    * type: str
    * desc: 品种
    * required: 
    */
    @JsonProperty("variety")
    
    
    private String p_variety;

    public String getP_variety() { return this.p_variety;}
    public void setP_variety(String v) { this.p_variety = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map
    <String
    ,String> other = new HashMap();
    public Map
    <String
    ,String> getOther(){ return other; }
    }
