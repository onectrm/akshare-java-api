
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:02 CST 2022*/
package com.onectrm.akshare.api.generated.stock;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: stock
* 接口: stock_zh_b_minute
* 目标地址: http://finance.sina.com.cn/realstock/company/sh900901/nc.shtml
* 描述: 新浪财经 B 股股票或者指数的分时数据，目前可以获取 1, 5, 15, 30, 60 分钟的数据频率, 可以指定是否复权
* 限量: 单次返回指定股票或指数的指定频率的最近交易日的历史分时行情数据
*/
public class stock_zh_b_minuteRequest extends AkShareRequestAndResponse {
    public stock_zh_b_minuteRequest(){
        setInterfaceName("stock_zh_b_minute");
    }

    public static stock_zh_b_minuteRequest of(


    String p_adjust,

    String p_period,

    String p_symbol,


    Map.Entry<String, String>... others){
    stock_zh_b_minuteRequest t = new stock_zh_b_minuteRequest();


    t.p_adjust = p_adjust;

    t.p_period = p_period;

    t.p_symbol = p_symbol;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: adjust
    * type: str
    * desc: adjust=&quot;&quot;; 默认为空: 返回不复权的数据; qfq: 返回前复权后的数据; hfq: 返回后复权后的数据;
    * required: 
    */
    @JsonProperty("adjust")
    
    
    private String p_adjust;

    public String getP_adjust() { return this.p_adjust;}
    public void setP_adjust(String v) { this.p_adjust = v;}

    /**
    * name: period
    * type: str
    * desc: period=&#39;1&#39;; 获取 1, 5, 15, 30, 60 分钟的数据频率
    * required: 
    */
    @JsonProperty("period")
    
    
    private String p_period;

    public String getP_period() { return this.p_period;}
    public void setP_period(String v) { this.p_period = v;}

    /**
    * name: symbol
    * type: str
    * desc: symbol=&#39;sh900901&#39;; 同日频率数据接口
    * required: 
    */
    @JsonProperty("symbol")
    
    
    private String p_symbol;

    public String getP_symbol() { return this.p_symbol;}
    public void setP_symbol(String v) { this.p_symbol = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
