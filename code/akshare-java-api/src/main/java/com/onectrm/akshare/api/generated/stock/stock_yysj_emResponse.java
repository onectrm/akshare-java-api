
    /*generated by AKShare JAVA API Generator Mon Jun 13 13:48:50 CST 2022*/
    package com.onectrm.akshare.api.generated.stock;

    import com.onectrm.akshare.api.JacksonDateDeserializer;
    import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
    import com.onectrm.akshare.api.AkShareRequestAndResponse;
    import com.fasterxml.jackson.annotation.*;
    import com.fasterxml.jackson.databind.annotation.*;
    import java.time.LocalDate;
    import java.time.LocalDateTime;
    import java.util.*;

    /**
    * 分类: stock
    * 接口: stock_yysj_em
    * 目标地址: http://data.eastmoney.com/bbsj/202003/yysj.html
    * 描述: 东方财富-数据中心-年报季报-预约披露时间
    * 限量: 单次获取指定 symbol 和 date 的预约披露时间数据
    */
    public class stock_yysj_emResponse extends AkShareRequestAndResponse {
    public stock_yysj_emResponse(){
    setInterfaceName("stock_yysj_em");
    }

    public static stock_yysj_emResponse of(


    Integer p_xu4hao4,

    String p_gu3piao4dai4ma3,

    String p_gu3piao4jian3cheng1,

    LocalDateTime p_shou3ci4yu4yue1shi2jian1,

    LocalDate p_yi1ci4bian4geng4ri4qi1,

    LocalDate p_er4ci4bian4geng4ri4qi1,

    LocalDate p_san1ci4bian4geng4ri4qi1,

    LocalDateTime p_shi2ji4pi1lu4shi2jian1,


    Map.Entry
    <String
    , String>... others){
    stock_yysj_emResponse t = new stock_yysj_emResponse();


    t.p_xu4hao4 = p_xu4hao4;

    t.p_gu3piao4dai4ma3 = p_gu3piao4dai4ma3;

    t.p_gu3piao4jian3cheng1 = p_gu3piao4jian3cheng1;

    t.p_shou3ci4yu4yue1shi2jian1 = p_shou3ci4yu4yue1shi2jian1;

    t.p_yi1ci4bian4geng4ri4qi1 = p_yi1ci4bian4geng4ri4qi1;

    t.p_er4ci4bian4geng4ri4qi1 = p_er4ci4bian4geng4ri4qi1;

    t.p_san1ci4bian4geng4ri4qi1 = p_san1ci4bian4geng4ri4qi1;

    t.p_shi2ji4pi1lu4shi2jian1 = p_shi2ji4pi1lu4shi2jian1;


    for (Map.Entry
    <String
    , String> o : others) {
    t.other.put(o.getKey(), o.getValue());
    }

    return t;
    }



    /**
    * name: 序号
    * type: int64
    * desc: 
    * required: 
    */
    @JsonProperty("序号")
    
    
    private Integer p_xu4hao4;

    public Integer getP_xu4hao4() { return this.p_xu4hao4;}
    public void setP_xu4hao4(Integer v) { this.p_xu4hao4 = v;}

    /**
    * name: 股票代码
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("股票代码")
    
    
    private String p_gu3piao4dai4ma3;

    public String getP_gu3piao4dai4ma3() { return this.p_gu3piao4dai4ma3;}
    public void setP_gu3piao4dai4ma3(String v) { this.p_gu3piao4dai4ma3 = v;}

    /**
    * name: 股票简称
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("股票简称")
    
    
    private String p_gu3piao4jian3cheng1;

    public String getP_gu3piao4jian3cheng1() { return this.p_gu3piao4jian3cheng1;}
    public void setP_gu3piao4jian3cheng1(String v) { this.p_gu3piao4jian3cheng1 = v;}

    /**
    * name: 首次预约时间
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("首次预约时间")
    
    @JsonDeserialize(using =
        JacksonDateTimeDeserializer.class)
    
    private LocalDateTime p_shou3ci4yu4yue1shi2jian1;

    public LocalDateTime getP_shou3ci4yu4yue1shi2jian1() { return this.p_shou3ci4yu4yue1shi2jian1;}
    public void setP_shou3ci4yu4yue1shi2jian1(LocalDateTime v) { this.p_shou3ci4yu4yue1shi2jian1 = v;}

    /**
    * name: 一次变更日期
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("一次变更日期")
    @JsonDeserialize(using =
        JacksonDateDeserializer.class)
    
    
    private LocalDate p_yi1ci4bian4geng4ri4qi1;

    public LocalDate getP_yi1ci4bian4geng4ri4qi1() { return this.p_yi1ci4bian4geng4ri4qi1;}
    public void setP_yi1ci4bian4geng4ri4qi1(LocalDate v) { this.p_yi1ci4bian4geng4ri4qi1 = v;}

    /**
    * name: 二次变更日期
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("二次变更日期")
    @JsonDeserialize(using =
        JacksonDateDeserializer.class)
    
    
    private LocalDate p_er4ci4bian4geng4ri4qi1;

    public LocalDate getP_er4ci4bian4geng4ri4qi1() { return this.p_er4ci4bian4geng4ri4qi1;}
    public void setP_er4ci4bian4geng4ri4qi1(LocalDate v) { this.p_er4ci4bian4geng4ri4qi1 = v;}

    /**
    * name: 三次变更日期
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("三次变更日期")
    @JsonDeserialize(using =
        JacksonDateDeserializer.class)
    
    
    private LocalDate p_san1ci4bian4geng4ri4qi1;

    public LocalDate getP_san1ci4bian4geng4ri4qi1() { return this.p_san1ci4bian4geng4ri4qi1;}
    public void setP_san1ci4bian4geng4ri4qi1(LocalDate v) { this.p_san1ci4bian4geng4ri4qi1 = v;}

    /**
    * name: 实际披露时间
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("实际披露时间")
    
    @JsonDeserialize(using =
        JacksonDateTimeDeserializer.class)
    
    private LocalDateTime p_shi2ji4pi1lu4shi2jian1;

    public LocalDateTime getP_shi2ji4pi1lu4shi2jian1() { return this.p_shi2ji4pi1lu4shi2jian1;}
    public void setP_shi2ji4pi1lu4shi2jian1(LocalDateTime v) { this.p_shi2ji4pi1lu4shi2jian1 = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map
    <String
    ,String> other = new HashMap();
    public Map
    <String
    ,String> getOther(){ return other; }
    }
