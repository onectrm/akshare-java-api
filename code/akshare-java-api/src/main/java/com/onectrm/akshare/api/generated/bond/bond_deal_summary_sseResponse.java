
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:01 CST 2022*/
package com.onectrm.akshare.api.generated.bond;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: bond
* 接口: bond_deal_summary_sse
* 目标地址: http://bond.sse.com.cn/data/statistics/overview/turnover/
* 描述: 上登债券信息网-市场数据-市场统计-市场概览-债券成交概览
* 限量: 单次返回指定交易日的债券成交概览数据
*/
public class bond_deal_summary_sseResponse extends AkShareRequestAndResponse {
    public bond_deal_summary_sseResponse(){
        setInterfaceName("bond_deal_summary_sse");
    }

    public static bond_deal_summary_sseResponse of(


    LocalDate p_shu4ju4ri4qi1,

    String p_zhai4quan4lei4xing2,

    Double p_dang1nian2cheng2jiao1jin1e2,

    Integer p_dang1nian2cheng2jiao1bi3shu4,

    Integer p_dang1ri4cheng2jiao1bi3shu4,

    Double p_dang1ri4cheng2jiao1jin1e2,


    Map.Entry<String, String>... others){
    bond_deal_summary_sseResponse t = new bond_deal_summary_sseResponse();


    t.p_shu4ju4ri4qi1 = p_shu4ju4ri4qi1;

    t.p_zhai4quan4lei4xing2 = p_zhai4quan4lei4xing2;

    t.p_dang1nian2cheng2jiao1jin1e2 = p_dang1nian2cheng2jiao1jin1e2;

    t.p_dang1nian2cheng2jiao1bi3shu4 = p_dang1nian2cheng2jiao1bi3shu4;

    t.p_dang1ri4cheng2jiao1bi3shu4 = p_dang1ri4cheng2jiao1bi3shu4;

    t.p_dang1ri4cheng2jiao1jin1e2 = p_dang1ri4cheng2jiao1jin1e2;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: 数据日期
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("数据日期")
    @JsonDeserialize(using = JacksonDateDeserializer.class) 
    
    private LocalDate p_shu4ju4ri4qi1;

    public LocalDate getP_shu4ju4ri4qi1() { return this.p_shu4ju4ri4qi1;}
    public void setP_shu4ju4ri4qi1(LocalDate v) { this.p_shu4ju4ri4qi1 = v;}

    /**
    * name: 债券类型
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("债券类型")
    
    
    private String p_zhai4quan4lei4xing2;

    public String getP_zhai4quan4lei4xing2() { return this.p_zhai4quan4lei4xing2;}
    public void setP_zhai4quan4lei4xing2(String v) { this.p_zhai4quan4lei4xing2 = v;}

    /**
    * name: 当年成交金额
    * type: float64
    * desc: 注意单位: 万元
    * required: 
    */
    @JsonProperty("当年成交金额")
    
    
    private Double p_dang1nian2cheng2jiao1jin1e2;

    public Double getP_dang1nian2cheng2jiao1jin1e2() { return this.p_dang1nian2cheng2jiao1jin1e2;}
    public void setP_dang1nian2cheng2jiao1jin1e2(Double v) { this.p_dang1nian2cheng2jiao1jin1e2 = v;}

    /**
    * name: 当年成交笔数
    * type: int64
    * desc: 
    * required: 
    */
    @JsonProperty("当年成交笔数")
    
    
    private Integer p_dang1nian2cheng2jiao1bi3shu4;

    public Integer getP_dang1nian2cheng2jiao1bi3shu4() { return this.p_dang1nian2cheng2jiao1bi3shu4;}
    public void setP_dang1nian2cheng2jiao1bi3shu4(Integer v) { this.p_dang1nian2cheng2jiao1bi3shu4 = v;}

    /**
    * name: 当日成交笔数
    * type: int64
    * desc: 
    * required: 
    */
    @JsonProperty("当日成交笔数")
    
    
    private Integer p_dang1ri4cheng2jiao1bi3shu4;

    public Integer getP_dang1ri4cheng2jiao1bi3shu4() { return this.p_dang1ri4cheng2jiao1bi3shu4;}
    public void setP_dang1ri4cheng2jiao1bi3shu4(Integer v) { this.p_dang1ri4cheng2jiao1bi3shu4 = v;}

    /**
    * name: 当日成交金额
    * type: float64
    * desc: 注意单位: 万元
    * required: 
    */
    @JsonProperty("当日成交金额")
    
    
    private Double p_dang1ri4cheng2jiao1jin1e2;

    public Double getP_dang1ri4cheng2jiao1jin1e2() { return this.p_dang1ri4cheng2jiao1jin1e2;}
    public void setP_dang1ri4cheng2jiao1jin1e2(Double v) { this.p_dang1ri4cheng2jiao1jin1e2 = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
