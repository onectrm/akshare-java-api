
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:01 CST 2022*/
package com.onectrm.akshare.api.generated.futures;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: futures
* 接口: futures_to_spot_shfe
* 目标地址: http://www.shfe.com.cn/statements/dataview.html?paramid=kx
* 描述: 提供上海期货交易所-期转现数据
* 限量: 单次返回指定交易月份的期转现数据
*/
public class futures_to_spot_shfeResponse extends AkShareRequestAndResponse {
    public futures_to_spot_shfeResponse(){
        setInterfaceName("futures_to_spot_shfe");
    }

    public static futures_to_spot_shfeResponse of(


    String p_he2yue1,

    String p_qi1zhuan3xian4liang4,

    LocalDate p_ri4qi1,

    String p_jiao1ge1liang4,


    Map.Entry<String, String>... others){
    futures_to_spot_shfeResponse t = new futures_to_spot_shfeResponse();


    t.p_he2yue1 = p_he2yue1;

    t.p_qi1zhuan3xian4liang4 = p_qi1zhuan3xian4liang4;

    t.p_ri4qi1 = p_ri4qi1;

    t.p_jiao1ge1liang4 = p_jiao1ge1liang4;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: 合约
    * type: str
    * desc: 
    * required: Y
    */
    @JsonProperty("合约")
    
    
    private String p_he2yue1;

    public String getP_he2yue1() { return this.p_he2yue1;}
    public void setP_he2yue1(String v) { this.p_he2yue1 = v;}

    /**
    * name: 期转现量
    * type: str
    * desc: 
    * required: Y
    */
    @JsonProperty("期转现量")
    
    
    private String p_qi1zhuan3xian4liang4;

    public String getP_qi1zhuan3xian4liang4() { return this.p_qi1zhuan3xian4liang4;}
    public void setP_qi1zhuan3xian4liang4(String v) { this.p_qi1zhuan3xian4liang4 = v;}

    /**
    * name: 日期
    * type: str
    * desc: 
    * required: Y
    */
    @JsonProperty("日期")
    @JsonDeserialize(using = JacksonDateDeserializer.class) 
    
    private LocalDate p_ri4qi1;

    public LocalDate getP_ri4qi1() { return this.p_ri4qi1;}
    public void setP_ri4qi1(LocalDate v) { this.p_ri4qi1 = v;}

    /**
    * name: 交割量
    * type: str
    * desc: 
    * required: Y
    */
    @JsonProperty("交割量")
    
    
    private String p_jiao1ge1liang4;

    public String getP_jiao1ge1liang4() { return this.p_jiao1ge1liang4;}
    public void setP_jiao1ge1liang4(String v) { this.p_jiao1ge1liang4 = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
