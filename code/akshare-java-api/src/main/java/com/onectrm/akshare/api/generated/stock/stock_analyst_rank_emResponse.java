
    /*generated by AKShare JAVA API Generator Mon Jun 13 13:48:50 CST 2022*/
    package com.onectrm.akshare.api.generated.stock;

    import com.onectrm.akshare.api.JacksonDateDeserializer;
    import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
    import com.onectrm.akshare.api.AkShareRequestAndResponse;
    import com.fasterxml.jackson.annotation.*;
    import com.fasterxml.jackson.databind.annotation.*;
    import java.time.LocalDate;
    import java.time.LocalDateTime;
    import java.util.*;

    /**
    * 分类: stock
    * 接口: stock_analyst_rank_em
    * 目标地址: http://data.eastmoney.com/invest/invest/list.html
    * 描述: 东方财富网-数据中心-研究报告-东方财富分析师指数-东方财富分析师指数最新排行
    * 限量: 单次获取指定年份的所有数据
    */
    public class stock_analyst_rank_emResponse extends AkShareRequestAndResponse {
    public stock_analyst_rank_emResponse(){
    setInterfaceName("stock_analyst_rank_em");
    }

    public static stock_analyst_rank_emResponse of(


    Integer p_xu4hao4,

    String p_fen1xi1shi1ming2cheng1,

    String p_fen1xi1shi1dan1wei4,

    Double p_nian2du4zhi3shu4,

    Double p_xxxxnian2shou1yi4lu4,

    Double p_3ge4yue4shou1yi4lu4,

    Double p_6ge4yue4shou1yi4lu4,

    Double p_12ge4yue4shou1yi4lu4,

    Integer p_cheng2fen1gu3ge4shu4,

    String p_xxxxzui4xin1ge4gu3ping2ji2,

    Integer p_fen1xi1shi1ID,


    Map.Entry
    <String
    , String>... others){
    stock_analyst_rank_emResponse t = new stock_analyst_rank_emResponse();


    t.p_xu4hao4 = p_xu4hao4;

    t.p_fen1xi1shi1ming2cheng1 = p_fen1xi1shi1ming2cheng1;

    t.p_fen1xi1shi1dan1wei4 = p_fen1xi1shi1dan1wei4;

    t.p_nian2du4zhi3shu4 = p_nian2du4zhi3shu4;

    t.p_xxxxnian2shou1yi4lu4 = p_xxxxnian2shou1yi4lu4;

    t.p_3ge4yue4shou1yi4lu4 = p_3ge4yue4shou1yi4lu4;

    t.p_6ge4yue4shou1yi4lu4 = p_6ge4yue4shou1yi4lu4;

    t.p_12ge4yue4shou1yi4lu4 = p_12ge4yue4shou1yi4lu4;

    t.p_cheng2fen1gu3ge4shu4 = p_cheng2fen1gu3ge4shu4;

    t.p_xxxxzui4xin1ge4gu3ping2ji2 = p_xxxxzui4xin1ge4gu3ping2ji2;

    t.p_fen1xi1shi1ID = p_fen1xi1shi1ID;


    for (Map.Entry
    <String
    , String> o : others) {
    t.other.put(o.getKey(), o.getValue());
    }

    return t;
    }



    /**
    * name: 序号
    * type: int64
    * desc: 
    * required: 
    */
    @JsonProperty("序号")
    
    
    private Integer p_xu4hao4;

    public Integer getP_xu4hao4() { return this.p_xu4hao4;}
    public void setP_xu4hao4(Integer v) { this.p_xu4hao4 = v;}

    /**
    * name: 分析师名称
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("分析师名称")
    
    
    private String p_fen1xi1shi1ming2cheng1;

    public String getP_fen1xi1shi1ming2cheng1() { return this.p_fen1xi1shi1ming2cheng1;}
    public void setP_fen1xi1shi1ming2cheng1(String v) { this.p_fen1xi1shi1ming2cheng1 = v;}

    /**
    * name: 分析师单位
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("分析师单位")
    
    
    private String p_fen1xi1shi1dan1wei4;

    public String getP_fen1xi1shi1dan1wei4() { return this.p_fen1xi1shi1dan1wei4;}
    public void setP_fen1xi1shi1dan1wei4(String v) { this.p_fen1xi1shi1dan1wei4 = v;}

    /**
    * name: 年度指数
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("年度指数")
    
    
    private Double p_nian2du4zhi3shu4;

    public Double getP_nian2du4zhi3shu4() { return this.p_nian2du4zhi3shu4;}
    public void setP_nian2du4zhi3shu4(Double v) { this.p_nian2du4zhi3shu4 = v;}

    /**
    * name: xxxx年收益率
    * type: float64
    * desc: 其中 xxxx 表示指定的年份; 注意单位: %
    * required: 
    */
    @JsonProperty("xxxx年收益率")
    
    
    private Double p_xxxxnian2shou1yi4lu4;

    public Double getP_xxxxnian2shou1yi4lu4() { return this.p_xxxxnian2shou1yi4lu4;}
    public void setP_xxxxnian2shou1yi4lu4(Double v) { this.p_xxxxnian2shou1yi4lu4 = v;}

    /**
    * name: 3个月收益率
    * type: float64
    * desc: 注意单位: %
    * required: 
    */
    @JsonProperty("3个月收益率")
    
    
    private Double p_3ge4yue4shou1yi4lu4;

    public Double getP_3ge4yue4shou1yi4lu4() { return this.p_3ge4yue4shou1yi4lu4;}
    public void setP_3ge4yue4shou1yi4lu4(Double v) { this.p_3ge4yue4shou1yi4lu4 = v;}

    /**
    * name: 6个月收益率
    * type: float64
    * desc: 注意单位: %
    * required: 
    */
    @JsonProperty("6个月收益率")
    
    
    private Double p_6ge4yue4shou1yi4lu4;

    public Double getP_6ge4yue4shou1yi4lu4() { return this.p_6ge4yue4shou1yi4lu4;}
    public void setP_6ge4yue4shou1yi4lu4(Double v) { this.p_6ge4yue4shou1yi4lu4 = v;}

    /**
    * name: 12个月收益率
    * type: float64
    * desc: 注意单位: %
    * required: 
    */
    @JsonProperty("12个月收益率")
    
    
    private Double p_12ge4yue4shou1yi4lu4;

    public Double getP_12ge4yue4shou1yi4lu4() { return this.p_12ge4yue4shou1yi4lu4;}
    public void setP_12ge4yue4shou1yi4lu4(Double v) { this.p_12ge4yue4shou1yi4lu4 = v;}

    /**
    * name: 成分股个数
    * type: int64
    * desc: 
    * required: 
    */
    @JsonProperty("成分股个数")
    
    
    private Integer p_cheng2fen1gu3ge4shu4;

    public Integer getP_cheng2fen1gu3ge4shu4() { return this.p_cheng2fen1gu3ge4shu4;}
    public void setP_cheng2fen1gu3ge4shu4(Integer v) { this.p_cheng2fen1gu3ge4shu4 = v;}

    /**
    * name: xxxx最新个股评级
    * type: object
    * desc: 其中 xxxx 表示指定的年份
    * required: 
    */
    @JsonProperty("xxxx最新个股评级")
    
    
    private String p_xxxxzui4xin1ge4gu3ping2ji2;

    public String getP_xxxxzui4xin1ge4gu3ping2ji2() { return this.p_xxxxzui4xin1ge4gu3ping2ji2;}
    public void setP_xxxxzui4xin1ge4gu3ping2ji2(String v) { this.p_xxxxzui4xin1ge4gu3ping2ji2 = v;}

    /**
    * name: 分析师ID
    * type: int64
    * desc: 
    * required: 
    */
    @JsonProperty("分析师ID")
    
    
    private Integer p_fen1xi1shi1ID;

    public Integer getP_fen1xi1shi1ID() { return this.p_fen1xi1shi1ID;}
    public void setP_fen1xi1shi1ID(Integer v) { this.p_fen1xi1shi1ID = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map
    <String
    ,String> other = new HashMap();
    public Map
    <String
    ,String> getOther(){ return other; }
    }
