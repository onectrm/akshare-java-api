
    /*generated by AKShare JAVA API Generator Mon Jun 13 13:48:49 CST 2022*/
    package com.onectrm.akshare.api.generated.futures;

    import com.onectrm.akshare.api.JacksonDateDeserializer;
    import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
    import com.onectrm.akshare.api.AkShareRequestAndResponse;
    import com.fasterxml.jackson.annotation.*;
    import com.fasterxml.jackson.databind.annotation.*;
    import java.time.LocalDate;
    import java.time.LocalDateTime;
    import java.util.*;

    /**
    * 分类: futures
    * 接口: futures_delivery_shfe
    * 目标地址: http://www.shfe.com.cn/statements/dataview.html?paramid=kx
    * 描述: 提供上海期货交易所-交割统计
    * 限量: 单次返回指定交易月份的交割统计数据
    */
    public class futures_delivery_shfeResponse extends AkShareRequestAndResponse {
    public futures_delivery_shfeResponse(){
    setInterfaceName("futures_delivery_shfe");
    }

    public static futures_delivery_shfeResponse of(


    String p_pin3zhong3,

    String p_jiao1ge1liang4ben3yue4,

    String p_jiao1ge1liang4bi3zhong4,

    String p_jiao1ge1liang4ben3nian2lei3ji4,

    String p_jiao1ge1liang4lei3ji4tong2bi3,


    Map.Entry
    <String
    , String>... others){
    futures_delivery_shfeResponse t = new futures_delivery_shfeResponse();


    t.p_pin3zhong3 = p_pin3zhong3;

    t.p_jiao1ge1liang4ben3yue4 = p_jiao1ge1liang4ben3yue4;

    t.p_jiao1ge1liang4bi3zhong4 = p_jiao1ge1liang4bi3zhong4;

    t.p_jiao1ge1liang4ben3nian2lei3ji4 = p_jiao1ge1liang4ben3nian2lei3ji4;

    t.p_jiao1ge1liang4lei3ji4tong2bi3 = p_jiao1ge1liang4lei3ji4tong2bi3;


    for (Map.Entry
    <String
    , String> o : others) {
    t.other.put(o.getKey(), o.getValue());
    }

    return t;
    }



    /**
    * name: 品种
    * type: str
    * desc: 
    * required: Y
    */
    @JsonProperty("品种")
    
    
    private String p_pin3zhong3;

    public String getP_pin3zhong3() { return this.p_pin3zhong3;}
    public void setP_pin3zhong3(String v) { this.p_pin3zhong3 = v;}

    /**
    * name: 交割量-本月
    * type: str
    * desc: 注意单位: 手; 交割量单边计算; 交割数据统计期为上月 16 日到本月 15 日
    * required: Y
    */
    @JsonProperty("交割量-本月")
    
    
    private String p_jiao1ge1liang4ben3yue4;

    public String getP_jiao1ge1liang4ben3yue4() { return this.p_jiao1ge1liang4ben3yue4;}
    public void setP_jiao1ge1liang4ben3yue4(String v) { this.p_jiao1ge1liang4ben3yue4 = v;}

    /**
    * name: 交割量-比重
    * type: str
    * desc: 注意单位: %
    * required: Y
    */
    @JsonProperty("交割量-比重")
    
    
    private String p_jiao1ge1liang4bi3zhong4;

    public String getP_jiao1ge1liang4bi3zhong4() { return this.p_jiao1ge1liang4bi3zhong4;}
    public void setP_jiao1ge1liang4bi3zhong4(String v) { this.p_jiao1ge1liang4bi3zhong4 = v;}

    /**
    * name: 交割量-本年累计
    * type: str
    * desc: 注意单位: 手; 交割量单边计算; 交割数据统计期为上月 16 日到本月 15 日
    * required: Y
    */
    @JsonProperty("交割量-本年累计")
    
    
    private String p_jiao1ge1liang4ben3nian2lei3ji4;

    public String getP_jiao1ge1liang4ben3nian2lei3ji4() { return this.p_jiao1ge1liang4ben3nian2lei3ji4;}
    public void setP_jiao1ge1liang4ben3nian2lei3ji4(String v) { this.p_jiao1ge1liang4ben3nian2lei3ji4 = v;}

    /**
    * name: 交割量-累计同比
    * type: str
    * desc: 注意单位: %
    * required: Y
    */
    @JsonProperty("交割量-累计同比")
    
    
    private String p_jiao1ge1liang4lei3ji4tong2bi3;

    public String getP_jiao1ge1liang4lei3ji4tong2bi3() { return this.p_jiao1ge1liang4lei3ji4tong2bi3;}
    public void setP_jiao1ge1liang4lei3ji4tong2bi3(String v) { this.p_jiao1ge1liang4lei3ji4tong2bi3 = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map
    <String
    ,String> other = new HashMap();
    public Map
    <String
    ,String> getOther(){ return other; }
    }
