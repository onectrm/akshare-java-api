
    /*generated by AKShare JAVA API Generator Mon Jun 13 13:48:50 CST 2022*/
    package com.onectrm.akshare.api.generated.others;

    import com.onectrm.akshare.api.JacksonDateDeserializer;
    import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
    import com.onectrm.akshare.api.AkShareRequestAndResponse;
    import com.fasterxml.jackson.annotation.*;
    import com.fasterxml.jackson.databind.annotation.*;
    import java.time.LocalDate;
    import java.time.LocalDateTime;
    import java.util.*;

    /**
    * 分类: others
    * 接口: movie_boxoffice_cinema_daily
    * 目标地址: https://www.endata.com.cn/BoxOffice/BO/Cinema/day.html
    * 描述: 指定日期的每日各影院的票房数据
    * 限量: 指定日期各影院的票房数据, 注意当前日期的数据需要第二日才可以获取
    */
    public class movie_boxoffice_cinema_dailyResponse extends AkShareRequestAndResponse {
    public movie_boxoffice_cinema_dailyResponse(){
    setInterfaceName("movie_boxoffice_cinema_daily");
    }

    public static movie_boxoffice_cinema_dailyResponse of(


    Double p_pai2xu4,

    Double p_ying3yuan4ming2cheng1,

    Double p_dan1ri4piao4fang2,

    Double p_dan1ri4chang3ci4,

    Double p_chang3jun1ren2ci4,

    Double p_chang3jun1piao4jia4,

    Double p_shang4zuo4lu4,


    Map.Entry
    <String
    , String>... others){
    movie_boxoffice_cinema_dailyResponse t = new movie_boxoffice_cinema_dailyResponse();


    t.p_pai2xu4 = p_pai2xu4;

    t.p_ying3yuan4ming2cheng1 = p_ying3yuan4ming2cheng1;

    t.p_dan1ri4piao4fang2 = p_dan1ri4piao4fang2;

    t.p_dan1ri4chang3ci4 = p_dan1ri4chang3ci4;

    t.p_chang3jun1ren2ci4 = p_chang3jun1ren2ci4;

    t.p_chang3jun1piao4jia4 = p_chang3jun1piao4jia4;

    t.p_shang4zuo4lu4 = p_shang4zuo4lu4;


    for (Map.Entry
    <String
    , String> o : others) {
    t.other.put(o.getKey(), o.getValue());
    }

    return t;
    }



    /**
    * name: 排序
    * type: float
    * desc: 票房排名
    * required: Y
    */
    @JsonProperty("排序")
    
    
    private Double p_pai2xu4;

    public Double getP_pai2xu4() { return this.p_pai2xu4;}
    public void setP_pai2xu4(Double v) { this.p_pai2xu4 = v;}

    /**
    * name: 影院名称
    * type: float
    * desc: 
    * required: Y
    */
    @JsonProperty("影院名称")
    
    
    private Double p_ying3yuan4ming2cheng1;

    public Double getP_ying3yuan4ming2cheng1() { return this.p_ying3yuan4ming2cheng1;}
    public void setP_ying3yuan4ming2cheng1(Double v) { this.p_ying3yuan4ming2cheng1 = v;}

    /**
    * name: 单日票房
    * type: float
    * desc: 注意单位: 元
    * required: Y
    */
    @JsonProperty("单日票房")
    
    
    private Double p_dan1ri4piao4fang2;

    public Double getP_dan1ri4piao4fang2() { return this.p_dan1ri4piao4fang2;}
    public void setP_dan1ri4piao4fang2(Double v) { this.p_dan1ri4piao4fang2 = v;}

    /**
    * name: 单日场次
    * type: float
    * desc: 
    * required: Y
    */
    @JsonProperty("单日场次")
    
    
    private Double p_dan1ri4chang3ci4;

    public Double getP_dan1ri4chang3ci4() { return this.p_dan1ri4chang3ci4;}
    public void setP_dan1ri4chang3ci4(Double v) { this.p_dan1ri4chang3ci4 = v;}

    /**
    * name: 场均人次
    * type: float
    * desc: 
    * required: Y
    */
    @JsonProperty("场均人次")
    
    
    private Double p_chang3jun1ren2ci4;

    public Double getP_chang3jun1ren2ci4() { return this.p_chang3jun1ren2ci4;}
    public void setP_chang3jun1ren2ci4(Double v) { this.p_chang3jun1ren2ci4 = v;}

    /**
    * name: 场均票价
    * type: float
    * desc: 
    * required: Y
    */
    @JsonProperty("场均票价")
    
    
    private Double p_chang3jun1piao4jia4;

    public Double getP_chang3jun1piao4jia4() { return this.p_chang3jun1piao4jia4;}
    public void setP_chang3jun1piao4jia4(Double v) { this.p_chang3jun1piao4jia4 = v;}

    /**
    * name: 上座率
    * type: float
    * desc: 注意单位: %
    * required: Y
    */
    @JsonProperty("上座率")
    
    
    private Double p_shang4zuo4lu4;

    public Double getP_shang4zuo4lu4() { return this.p_shang4zuo4lu4;}
    public void setP_shang4zuo4lu4(Double v) { this.p_shang4zuo4lu4 = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map
    <String
    ,String> other = new HashMap();
    public Map
    <String
    ,String> getOther(){ return other; }
    }
