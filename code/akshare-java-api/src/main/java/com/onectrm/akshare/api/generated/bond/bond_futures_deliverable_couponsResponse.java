
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:01 CST 2022*/
package com.onectrm.akshare.api.generated.bond;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: bond
* 接口: bond_futures_deliverable_coupons
* 目标地址: http://www.csindex.com.cn/zh-CN/bond-valuation/bond-futures-deliverable-coupons-related-indicators
* 描述: 国债期货可交割券相关指标
* 限量: 只能返回近一年的数据
*/
public class bond_futures_deliverable_couponsResponse extends AkShareRequestAndResponse {
    public bond_futures_deliverable_couponsResponse(){
        setInterfaceName("bond_futures_deliverable_coupons");
    }

    public static bond_futures_deliverable_couponsResponse of(


    Double p_yin3han2hui2gou4li4lu4,

    LocalDate p_ri4qi1,

    String p_shang4jiao1suo3dai4ma3,

    String p_he2yue1dai4ma3,

    Double p_ji1cha1,

    String p_shen1jiao1suo3dai4ma3,

    Double p_fa1piao4jia4ge2,

    String p_yin2xing2jian1dai4ma3,

    Double p_zhong1zheng4gu1zhi2,


    Map.Entry<String, String>... others){
    bond_futures_deliverable_couponsResponse t = new bond_futures_deliverable_couponsResponse();


    t.p_yin3han2hui2gou4li4lu4 = p_yin3han2hui2gou4li4lu4;

    t.p_ri4qi1 = p_ri4qi1;

    t.p_shang4jiao1suo3dai4ma3 = p_shang4jiao1suo3dai4ma3;

    t.p_he2yue1dai4ma3 = p_he2yue1dai4ma3;

    t.p_ji1cha1 = p_ji1cha1;

    t.p_shen1jiao1suo3dai4ma3 = p_shen1jiao1suo3dai4ma3;

    t.p_fa1piao4jia4ge2 = p_fa1piao4jia4ge2;

    t.p_yin2xing2jian1dai4ma3 = p_yin2xing2jian1dai4ma3;

    t.p_zhong1zheng4gu1zhi2 = p_zhong1zheng4gu1zhi2;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: 隐含回购利率
    * type: float64
    * desc: 注意单位: %
    * required: 
    */
    @JsonProperty("隐含回购利率")
    
    
    private Double p_yin3han2hui2gou4li4lu4;

    public Double getP_yin3han2hui2gou4li4lu4() { return this.p_yin3han2hui2gou4li4lu4;}
    public void setP_yin3han2hui2gou4li4lu4(Double v) { this.p_yin3han2hui2gou4li4lu4 = v;}

    /**
    * name: 日期
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("日期")
    @JsonDeserialize(using = JacksonDateDeserializer.class) 
    
    private LocalDate p_ri4qi1;

    public LocalDate getP_ri4qi1() { return this.p_ri4qi1;}
    public void setP_ri4qi1(LocalDate v) { this.p_ri4qi1 = v;}

    /**
    * name: 上交所代码
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("上交所代码")
    
    
    private String p_shang4jiao1suo3dai4ma3;

    public String getP_shang4jiao1suo3dai4ma3() { return this.p_shang4jiao1suo3dai4ma3;}
    public void setP_shang4jiao1suo3dai4ma3(String v) { this.p_shang4jiao1suo3dai4ma3 = v;}

    /**
    * name: 合约代码
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("合约代码")
    
    
    private String p_he2yue1dai4ma3;

    public String getP_he2yue1dai4ma3() { return this.p_he2yue1dai4ma3;}
    public void setP_he2yue1dai4ma3(String v) { this.p_he2yue1dai4ma3 = v;}

    /**
    * name: 基差
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("基差")
    
    
    private Double p_ji1cha1;

    public Double getP_ji1cha1() { return this.p_ji1cha1;}
    public void setP_ji1cha1(Double v) { this.p_ji1cha1 = v;}

    /**
    * name: 深交所代码
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("深交所代码")
    
    
    private String p_shen1jiao1suo3dai4ma3;

    public String getP_shen1jiao1suo3dai4ma3() { return this.p_shen1jiao1suo3dai4ma3;}
    public void setP_shen1jiao1suo3dai4ma3(String v) { this.p_shen1jiao1suo3dai4ma3 = v;}

    /**
    * name: 发票价格
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("发票价格")
    
    
    private Double p_fa1piao4jia4ge2;

    public Double getP_fa1piao4jia4ge2() { return this.p_fa1piao4jia4ge2;}
    public void setP_fa1piao4jia4ge2(Double v) { this.p_fa1piao4jia4ge2 = v;}

    /**
    * name: 银行间代码
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("银行间代码")
    
    
    private String p_yin2xing2jian1dai4ma3;

    public String getP_yin2xing2jian1dai4ma3() { return this.p_yin2xing2jian1dai4ma3;}
    public void setP_yin2xing2jian1dai4ma3(String v) { this.p_yin2xing2jian1dai4ma3 = v;}

    /**
    * name: 中证估值
    * type: float64
    * desc: 注意单位: (净价)
    * required: 
    */
    @JsonProperty("中证估值")
    
    
    private Double p_zhong1zheng4gu1zhi2;

    public Double getP_zhong1zheng4gu1zhi2() { return this.p_zhong1zheng4gu1zhi2;}
    public void setP_zhong1zheng4gu1zhi2(Double v) { this.p_zhong1zheng4gu1zhi2 = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
