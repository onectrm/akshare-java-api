
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:02 CST 2022*/
package com.onectrm.akshare.api.generated.option;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: option
* 接口: option_risk_analysis_em
* 目标地址: https://data.eastmoney.com/other/riskanal.html
* 描述: 东方财富网-数据中心-特色数据-期权风险分析
* 限量: 单次返回所有数据
*/
public class option_risk_analysis_emResponse extends AkShareRequestAndResponse {
    public option_risk_analysis_emResponse(){
        setInterfaceName("option_risk_analysis_em");
    }

    public static option_risk_analysis_emResponse of(


    String p_qi1quan2ming2cheng1,

    Double p_gang1gan1bi3lu4,

    String p_qi1quan2dai4ma3,

    Double p_Gamma,

    Double p_Theta,

    Double p_zhang3die1fu2,

    Double p_Vega,

    Double p_zui4xin1jia4,

    String p_dao4qi1ri4,

    Double p_Rho,

    Double p_shi2ji4gang1gan1bi3lu4,

    Double p_Delta,


    Map.Entry<String, String>... others){
    option_risk_analysis_emResponse t = new option_risk_analysis_emResponse();


    t.p_qi1quan2ming2cheng1 = p_qi1quan2ming2cheng1;

    t.p_gang1gan1bi3lu4 = p_gang1gan1bi3lu4;

    t.p_qi1quan2dai4ma3 = p_qi1quan2dai4ma3;

    t.p_Gamma = p_Gamma;

    t.p_Theta = p_Theta;

    t.p_zhang3die1fu2 = p_zhang3die1fu2;

    t.p_Vega = p_Vega;

    t.p_zui4xin1jia4 = p_zui4xin1jia4;

    t.p_dao4qi1ri4 = p_dao4qi1ri4;

    t.p_Rho = p_Rho;

    t.p_shi2ji4gang1gan1bi3lu4 = p_shi2ji4gang1gan1bi3lu4;

    t.p_Delta = p_Delta;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: 期权名称
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("期权名称")
    
    
    private String p_qi1quan2ming2cheng1;

    public String getP_qi1quan2ming2cheng1() { return this.p_qi1quan2ming2cheng1;}
    public void setP_qi1quan2ming2cheng1(String v) { this.p_qi1quan2ming2cheng1 = v;}

    /**
    * name: 杠杆比率
    * type: float64
    * desc: 注意: 杠杆比率=标价价格÷期权价格，杠杆反映投资标的相对投资期权的成本比例。
    * required: 
    */
    @JsonProperty("杠杆比率")
    
    
    private Double p_gang1gan1bi3lu4;

    public Double getP_gang1gan1bi3lu4() { return this.p_gang1gan1bi3lu4;}
    public void setP_gang1gan1bi3lu4(Double v) { this.p_gang1gan1bi3lu4 = v;}

    /**
    * name: 期权代码
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("期权代码")
    
    
    private String p_qi1quan2dai4ma3;

    public String getP_qi1quan2dai4ma3() { return this.p_qi1quan2dai4ma3;}
    public void setP_qi1quan2dai4ma3(String v) { this.p_qi1quan2dai4ma3 = v;}

    /**
    * name: Gamma
    * type: float64
    * desc: 注意: 指期权标的股票价格变化对Delta值的影响程度。Gamma=Delta的变化／期权标的股票价格变化。
    * required: 
    */
    @JsonProperty("Gamma")
    
    
    private Double p_Gamma;

    public Double getP_Gamma() { return this.p_Gamma;}
    public void setP_Gamma(Double v) { this.p_Gamma = v;}

    /**
    * name: Theta
    * type: float64
    * desc: 注意: 指到期时间变化对期权价值的影响程度。Theta=期权价值变化/到期时间变化。到期期限与认购、认沽期权价值均为正相关关系。
    * required: 
    */
    @JsonProperty("Theta")
    
    
    private Double p_Theta;

    public Double getP_Theta() { return this.p_Theta;}
    public void setP_Theta(Double v) { this.p_Theta = v;}

    /**
    * name: 涨跌幅
    * type: float64
    * desc: 注意单位: %;
    * required: 
    */
    @JsonProperty("涨跌幅")
    
    
    private Double p_zhang3die1fu2;

    public Double getP_zhang3die1fu2() { return this.p_zhang3die1fu2;}
    public void setP_zhang3die1fu2(Double v) { this.p_zhang3die1fu2 = v;}

    /**
    * name: Vega
    * type: float64
    * desc: 注意: 指合约标的证券价格波动率变化对期权价值的影响程度。Vega=期权价值变化/波动率的变化。波动率与认购、认沽期权价值均为正相关关系。
    * required: 
    */
    @JsonProperty("Vega")
    
    
    private Double p_Vega;

    public Double getP_Vega() { return this.p_Vega;}
    public void setP_Vega(Double v) { this.p_Vega = v;}

    /**
    * name: 最新价
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("最新价")
    
    
    private Double p_zui4xin1jia4;

    public Double getP_zui4xin1jia4() { return this.p_zui4xin1jia4;}
    public void setP_zui4xin1jia4(Double v) { this.p_zui4xin1jia4 = v;}

    /**
    * name: 到期日
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("到期日")
    
    
    private String p_dao4qi1ri4;

    public String getP_dao4qi1ri4() { return this.p_dao4qi1ri4;}
    public void setP_dao4qi1ri4(String v) { this.p_dao4qi1ri4 = v;}

    /**
    * name: Rho
    * type: float64
    * desc: 注意: 指无风险利率变化对期权价格的影响程度。Rho=期权价格的变化／无风险利率的变化。市场无风险利率与认购期权价值为正相关，与认沽期权为负相关。
    * required: 
    */
    @JsonProperty("Rho")
    
    
    private Double p_Rho;

    public Double getP_Rho() { return this.p_Rho;}
    public void setP_Rho(Double v) { this.p_Rho = v;}

    /**
    * name: 实际杠杆比率
    * type: float64
    * desc: 注意: 实际杠杆比率=对冲值×杠杆比率，透过实际杠杆比率，投资者可知道当标的涨跌1%时，期权的理论价格会变动多少个百分点。
    * required: 
    */
    @JsonProperty("实际杠杆比率")
    
    
    private Double p_shi2ji4gang1gan1bi3lu4;

    public Double getP_shi2ji4gang1gan1bi3lu4() { return this.p_shi2ji4gang1gan1bi3lu4;}
    public void setP_shi2ji4gang1gan1bi3lu4(Double v) { this.p_shi2ji4gang1gan1bi3lu4 = v;}

    /**
    * name: Delta
    * type: float64
    * desc: 注意: 指期权标的股票价格变化对期权价格的影响程度。Delta=期权价格变化/期权标的股票价格变化。股票价格与认购期权价值为正相关关系，与认沽期权价值为负相关关系。
    * required: 
    */
    @JsonProperty("Delta")
    
    
    private Double p_Delta;

    public Double getP_Delta() { return this.p_Delta;}
    public void setP_Delta(Double v) { this.p_Delta = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
