
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:01 CST 2022*/
package com.onectrm.akshare.api.generated.index;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: index
* 接口: index_cflp_price
* 目标地址: http://index.0256.cn/expx.htm
* 描述: 获取指定 symbol 的中国公路物流运价指数的数据
* 限量: 只能获取近期的数据; 目前该接口数据源更新有几个交易日的延时
*/
public class index_cflp_priceResponse extends AkShareRequestAndResponse {
    public index_cflp_priceResponse(){
        setInterfaceName("index_cflp_price");
    }

    public static index_cflp_priceResponse of(


    Double p_dang1qian2jia4,

    Double p_zhang3die1,

    Double p_zhang3die1fu2,

    Double p_kai1pan2jia4,

    LocalDateTime p_ri4qi1shi2jian1,


    Map.Entry<String, String>... others){
    index_cflp_priceResponse t = new index_cflp_priceResponse();


    t.p_dang1qian2jia4 = p_dang1qian2jia4;

    t.p_zhang3die1 = p_zhang3die1;

    t.p_zhang3die1fu2 = p_zhang3die1fu2;

    t.p_kai1pan2jia4 = p_kai1pan2jia4;

    t.p_ri4qi1shi2jian1 = p_ri4qi1shi2jian1;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: 当前价
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("当前价")
    
    
    private Double p_dang1qian2jia4;

    public Double getP_dang1qian2jia4() { return this.p_dang1qian2jia4;}
    public void setP_dang1qian2jia4(Double v) { this.p_dang1qian2jia4 = v;}

    /**
    * name: 涨跌
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("涨跌")
    
    
    private Double p_zhang3die1;

    public Double getP_zhang3die1() { return this.p_zhang3die1;}
    public void setP_zhang3die1(Double v) { this.p_zhang3die1 = v;}

    /**
    * name: 涨跌幅
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("涨跌幅")
    
    
    private Double p_zhang3die1fu2;

    public Double getP_zhang3die1fu2() { return this.p_zhang3die1fu2;}
    public void setP_zhang3die1fu2(Double v) { this.p_zhang3die1fu2 = v;}

    /**
    * name: 开盘价
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("开盘价")
    
    
    private Double p_kai1pan2jia4;

    public Double getP_kai1pan2jia4() { return this.p_kai1pan2jia4;}
    public void setP_kai1pan2jia4(Double v) { this.p_kai1pan2jia4 = v;}

    /**
    * name: 日期时间
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("日期时间")
    
    @JsonDeserialize(using = JacksonDateTimeDeserializer.class) 
    private LocalDateTime p_ri4qi1shi2jian1;

    public LocalDateTime getP_ri4qi1shi2jian1() { return this.p_ri4qi1shi2jian1;}
    public void setP_ri4qi1shi2jian1(LocalDateTime v) { this.p_ri4qi1shi2jian1 = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
