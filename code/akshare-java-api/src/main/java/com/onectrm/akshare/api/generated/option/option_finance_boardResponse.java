
/*generated by AKShare JAVA API Generator Sun Jun 12 15:42:02 CST 2022*/
package com.onectrm.akshare.api.generated.option;

import com.onectrm.akshare.api.JacksonDateDeserializer;
import com.onectrm.akshare.api.JacksonDateTimeDeserializer;
import com.onectrm.akshare.api.AkShareRequestAndResponse;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

/**
* 分类: option
* 接口: option_finance_board
* 目标地址: http://www.sse.com.cn/assortment/options/price/, http://www.szse.cn/market/derivative/derivative_list/index.html, http://www.cffex.com.cn/hs300gzqq/
* 描述: 上海证券交易所、深圳证券交易所、中国金融期货交易所的金融期权行情数据
* 限量: 单次返回当前交易日指定合约期权行情数据
*/
public class option_finance_boardResponse extends AkShareRequestAndResponse {
    public option_finance_boardResponse(){
        setInterfaceName("option_finance_board");
    }

    public static option_finance_boardResponse of(


    Double p_dang1qian2jia4,

    Double p_qian2jie2jia4,

    Double p_shu4liang4,

    LocalDate p_ri4qi1,

    Double p_zhang3die1fu2,

    String p_he2yue1jiao1yi4dai4ma3,

    Double p_xing2quan2jia4,


    Map.Entry<String, String>... others){
    option_finance_boardResponse t = new option_finance_boardResponse();


    t.p_dang1qian2jia4 = p_dang1qian2jia4;

    t.p_qian2jie2jia4 = p_qian2jie2jia4;

    t.p_shu4liang4 = p_shu4liang4;

    t.p_ri4qi1 = p_ri4qi1;

    t.p_zhang3die1fu2 = p_zhang3die1fu2;

    t.p_he2yue1jiao1yi4dai4ma3 = p_he2yue1jiao1yi4dai4ma3;

    t.p_xing2quan2jia4 = p_xing2quan2jia4;


        for (Map.Entry<String, String> o : others) {
            t.other.put(o.getKey(), o.getValue());
        }

        return t;
    }



    /**
    * name: 当前价
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("当前价")
    
    
    private Double p_dang1qian2jia4;

    public Double getP_dang1qian2jia4() { return this.p_dang1qian2jia4;}
    public void setP_dang1qian2jia4(Double v) { this.p_dang1qian2jia4 = v;}

    /**
    * name: 前结价
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("前结价")
    
    
    private Double p_qian2jie2jia4;

    public Double getP_qian2jie2jia4() { return this.p_qian2jie2jia4;}
    public void setP_qian2jie2jia4(Double v) { this.p_qian2jie2jia4 = v;}

    /**
    * name: 数量
    * type: float64
    * desc: 当前总的合约数量
    * required: 
    */
    @JsonProperty("数量")
    
    
    private Double p_shu4liang4;

    public Double getP_shu4liang4() { return this.p_shu4liang4;}
    public void setP_shu4liang4(Double v) { this.p_shu4liang4 = v;}

    /**
    * name: 日期
    * type: object
    * desc: 
    * required: 日期时间
    */
    @JsonProperty("日期")
    @JsonDeserialize(using = JacksonDateDeserializer.class) 
    
    private LocalDate p_ri4qi1;

    public LocalDate getP_ri4qi1() { return this.p_ri4qi1;}
    public void setP_ri4qi1(LocalDate v) { this.p_ri4qi1 = v;}

    /**
    * name: 涨跌幅
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("涨跌幅")
    
    
    private Double p_zhang3die1fu2;

    public Double getP_zhang3die1fu2() { return this.p_zhang3die1fu2;}
    public void setP_zhang3die1fu2(Double v) { this.p_zhang3die1fu2 = v;}

    /**
    * name: 合约交易代码
    * type: object
    * desc: 
    * required: 
    */
    @JsonProperty("合约交易代码")
    
    
    private String p_he2yue1jiao1yi4dai4ma3;

    public String getP_he2yue1jiao1yi4dai4ma3() { return this.p_he2yue1jiao1yi4dai4ma3;}
    public void setP_he2yue1jiao1yi4dai4ma3(String v) { this.p_he2yue1jiao1yi4dai4ma3 = v;}

    /**
    * name: 行权价
    * type: float64
    * desc: 
    * required: 
    */
    @JsonProperty("行权价")
    
    
    private Double p_xing2quan2jia4;

    public Double getP_xing2quan2jia4() { return this.p_xing2quan2jia4;}
    public void setP_xing2quan2jia4(Double v) { this.p_xing2quan2jia4 = v;}


    @JsonAnyGetter
    @JsonAnySetter
    private Map<String,String> other = new HashMap();
    public Map<String,String> getOther(){ return other; }
}
